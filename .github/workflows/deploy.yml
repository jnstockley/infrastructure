name: Docker Deploy

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - docker/racknerd/**
      # - docker/photo-server/**

jobs:
  deploy:
    name: Deploy new Docker Container
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Checkout code
        uses: actions/checkout@v4
      - name: Step 2 - Set Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "America/Chicago"
      #- name: Step 3 - Setup and Connect to Tailscale
      #  uses: tailscale/github-action@v2
      #  with:
      #    oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
      #    oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
      #    tags: tag:github
      - name: Step 4 - Get Changes files
        id: files
        uses: tj-actions/changed-files@v45.0.1
        with:
          files_yaml: |
            docker_racknerd:
              - docker/racknerd/**
            docker_photo_server:
              - docker/photo-server/**

      - name: Step 5 - Deploy containers (Racknerd)
        if: steps.files.outputs.docker_racknerd_any_changed == 'true'
        uses: appleboy/ssh-action@v1.0.3
        env:
          FILES: ${{ steps.files.outputs.docker_racknerd_all_changed_files }}
        with:
          host: ${{ secrets.RACKNERD_IP }}
          username: jackstockley
          key: ${{ secrets.RACKNERD_SSH_KEY }}
          passphrase: ${{ secrets.RACKNERD_SSH_PASSWORD }}
          envs: FILES
          script: |
            echo "Deploying Racknerd containers"
            cd ~/infrastructure/
            git reset --hard origin/main
            git pull
            for file in ${FILES}; do
              echo "Deploying $file"
              docker compose -f $file up -d --force-recreate --remove-orphans
            done            
            docker image prune -a -f

      #- name: Step 5 - Deploy containers (Photo Server)
      #  if: steps.files.outputs.docker_photo_server_any_changed == 'true'
      #  uses: appleboy/ssh-action@v1.0.3
      #  env:
      #    FILES: ${{ steps.files.outputs.docker_photo_server_all_changed_files }}
      #  with:
      #    host: ${{ secrets.PHOTO_SERVER_IP }}
      #    username: jackstockley
      #    key: ${{ secrets.PHOTO_SERVER_SSH_KEY }}
      #    passphrase: ${{ secrets.PHOTO_SERVER_SSH_PASSWORD }}
      #    envs: FILES
      #    script: |
      #      echo "Deploying Photo Server containers"
      #      cd ~/infrastructure/
      #      git reset --hard origin/main
      #      git pull
      #      for file in ${FILES}; do
      #        echo "Deploying $file"
      #        docker compose -f $file up -d --force-recreate --remove-orphans
      #      done
      #      docker image prune -a -f
