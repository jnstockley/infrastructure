---
name: Docker Deploy

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - docker/racknerd/**/compose.yml
      - docker/photo-server/**/compose.yml

jobs:
  get_changed_files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      racknerd_file_changes: ${{ steps.racknerd-changes.outputs.changed_files }}
      photo_server_file_changes: ${{ steps.photo-server-changes.outputs.changed_files }}
    steps:
      - name: Step 1 - Set Timezone
        run: sudo timedatectl set-timezone America/Chicago

      - name: Step 2 - Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Step 3 - Get changed files between branches for Racknerd
        id: racknerd-changes
        run: ./scripts/diffs.sh ${{ github.base_ref }} ${{ github.head_ref }} "docker/racknerd"

      - name: Step 4 - Get changed files between branches for Photo Server
        id: photo-server-changes
        run: ./scripts/diffs.sh ${{ github.base_ref }} ${{ github.head_ref }} "docker/photo-server"

  racknerd_deploy:
    name: Deploy new Docker Container to Racknerd
    runs-on: ubuntu-latest
    environment: racknerd
    needs: get_changed_files
    if: ${{ needs.get_changed_files.outputs.racknerd_file_changes != '' }}
    steps:
      - name: Step 1 - Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Step 2 - Deploy to Racknerd Server
        env:
          RACKNERD_SERVER_FILES: ${{ needs.get_changed_files.outputs.racknerd_file_changes }}
          SSH_USER: jackstockley
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSWORD }}
          SSH_HOST: ${{ secrets.IP }}
        run: |
          # Process files and create commands
          PROCESSED_FILES=$(echo "$RACKNERD_SERVER_FILES" | tr ',' ' ')
          SSH_COMMANDS="cd ~/infrastructure/ && git reset --hard origin/main && git pull"
          
          for file in $PROCESSED_FILES; do
            SSH_COMMANDS="$SSH_COMMANDS && echo \"Deploying $file\" && docker compose -f $file up -d --force-recreate --remove-orphans"
          done
          
          SSH_COMMANDS="$SSH_COMMANDS && docker image prune -a -f && docker system prune -f"
          
          # Install expect
          sudo apt-get update && sudo apt-get install -y expect
          
          # Execute the SSH script
          ./scripts/ssh.sh -u "$SSH_USER" -k "$SSH_KEY" -p "$SSH_PASSPHRASE" -h "$SSH_HOST" -c "$SSH_COMMANDS"

  photo_server_deploy:
    name: Deploy new Docker Container to Photo Server
    runs-on: ubuntu-latest
    environment: photo-server
    needs: get_changed_files
    if: ${{ needs.get_changed_files.outputs.photo_server_file_changes != '' }}
    steps:
      - name: Step 1 - Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Step 2 - Deploy to Photo Server
        env:
          RACKNERD_SERVER_FILES: ${{ needs.get_changed_files.outputs.racknerd_file_changes }}
          SSH_USER: jackstockley
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSWORD }}
          SSH_HOST: photo-server.local.jstockley.com
        run: |
          # Process files and create commands
          PROCESSED_FILES=$(echo "$RACKNERD_SERVER_FILES" | tr ',' ' ')
          SSH_COMMANDS="cd ~/infrastructure/ && git reset --hard origin/main && git pull"
          
          for file in $PROCESSED_FILES; do
            SSH_COMMANDS="$SSH_COMMANDS && echo \"Deploying $file\" && docker compose -f $file up -d --force-recreate --remove-orphans"
          done
          
          SSH_COMMANDS="$SSH_COMMANDS && docker image prune -a -f && docker system prune -f"
          
          # Install expect
          sudo apt-get update && sudo apt-get install -y expect
          
          # Execute the SSH script
          ./scripts/ssh.sh -u "$SSH_USER" -k "$SSH_KEY" -p "$SSH_PASSPHRASE" -h "$SSH_HOST" -c "$SSH_COMMANDS"
