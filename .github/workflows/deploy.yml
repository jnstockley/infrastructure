---
name: Docker Deploy

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - docker/racknerd/**/compose.yml
      - docker/photo-server/**/compose.yml

jobs:
  deploy:
    name: Deploy new Docker Container
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Set Timezone
        uses: szenius/set-timezone@eebc20b7dc3d0f0832339f7046227a6b32fb44c3
        with:
          timezoneLinux: "America/Chicago"

      - name: Step 2 - Get Changes files
        id: files
        uses: tj-actions/changed-files@c1f82ce4baf9f73b1a68fb3d7a72951c2f196f12
        with:
          files_yaml: |
            docker_racknerd:
              - docker/racknerd/**/compose.yml
            docker_photo_server:
              - docker/photo-server/**/compose.yml

      - name: Step 3 - Deploy containers (Racknerd)
        if: steps.files.outputs.docker_racknerd_any_changed == 'true'
        uses: appleboy/ssh-action@7eaf76671a0d7eec5d98ee897acda4f968735a17
        env:
          FILES: ${{ steps.files.outputs.docker_racknerd_all_changed_files }}
        with:
          host: ${{ secrets.RACKNERD_IP }}
          username: jackstockley
          key: ${{ secrets.RACKNERD_SSH_KEY }}
          passphrase: ${{ secrets.RACKNERD_SSH_PASSWORD }}
          envs: FILES
          script: |
            echo "Deploying Racknerd containers"
            cd ~/infrastructure/
            git reset --hard origin/main
            git pull
            for file in ${FILES}; do
              echo "Deploying $file"
              docker compose -f $file up -d --force-recreate --remove-orphans
            done
            docker image prune -a -f
            docker system prune -f

      - name: Step 4 - WireGuard Connection
        if: steps.files.outputs.docker_photo_server_any_changed == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard resolvconf
          echo "${{ secrets.IOWA_HOME_VPN_CONF }}" > wg0.conf
          echo "${{ secrets.CHICAGO_HOME_VPN_CONF }}" > wg1.conf
          sudo chmod 600 wg0.conf
          sudo chmod 600 wg1.conf
          sudo cp wg0.conf /etc/wireguard/
          sudo cp wg1.conf /etc/wireguard/
          sudo wg-quick up wg0
          sudo wg-quick up wg1

      - name: Step 5 - Deploy containers (Photo Server)
        if: steps.files.outputs.docker_photo_server_any_changed == 'true'
        uses: appleboy/ssh-action@7eaf76671a0d7eec5d98ee897acda4f968735a17
        env:
          FILES: ${{ steps.files.outputs.docker_photo_server_all_changed_files }}
        with:
          host: photo-server.local.jstockley.com
          username: jackstockley
          key: ${{ secrets.PHOTO_SERVER_SSH_KEY }}
          passphrase: ${{ secrets.PHOTO_SERVER_SSH_PASSWORD }}
          envs: FILES
          script: |
            echo "Deploying Photo Server containers"
            cd ~/infrastructure/
            git reset --hard origin/main
            git pull
            for file in ${FILES}; do
              echo "Deploying $file"
              docker compose -f $file up -d --force-recreate --remove-orphans
            done
            docker image prune -a -f
            docker system prune -f
