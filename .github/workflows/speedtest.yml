name: Speedtest

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  backup:
    name: Speedtest
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Setup and Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github
      #- name: Step 2 - Iowa Local Speedtest
      #  env:
      #    download_threshold: 106300000
      #    upload_threshold: 100000000
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: 192.168.0.17
      #    port: 22
      #    username: root
      #    key: ${{ secrets.PRIVATE_SSH_KEY }}
      #    envs: download_threshold,upload_threshold
      #    script: |
      #      rm -rf /root/speedtest/
      #      mkdir -p /root/speedtest/
      #      cd /root/speedtest/
      #      wget https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-aarch64.tgz
      #      tar -xvzf ookla-speedtest-1.2.0-linux-aarch64.tgz
      #      chmod +x speedtest
      #      ./speedtest --accept-license --server-id=10134 --format=json >> output.json
      #      download_threshold=106300000
      #      upload_threshold=100000000
      #      jq_output=$(jq '.download.bandwidth' output.json) && (( $(echo "$jq_output > $download_threshold" | bc -l) )) && exit 0 || exit 1
      #      jq_output=$(jq '.upload.bandwidth' output.json) && (( $(echo "$jq_output > $upload_threshold" | bc -l) )) && exit 0 || exit 1
      #      cat output.json
      #      cd ..
      #      rm -rf /root/speedtest/
      #- name: Step 3 - Chicago Local Speedtest
      #  env:
      #    download_threshold: 10000000
      #    upload_threshold: 1875000
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: 192.168.1.83
      #    port: 22
      #    username: root
      #    key: ${{ secrets.PRIVATE_SSH_KEY }}
      #    envs: download_threshold,upload_threshold
      #    script: |
       #     rm -rf /root/speedtest/
       #     mkdir -p /root/speedtest/
       #     cd /root/speedtest/
       #     wget https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-aarch64.tgz
       #     tar -xvzf ookla-speedtest-1.2.0-linux-aarch64.tgz
       #     chmod +x speedtest
       #     ./speedtest --accept-license --server-id=1776 --format=json >> output.json
       #     download_threshold=10000000
       #     upload_threshold=1875000
       #     jq_output=$(jq '.download.bandwidth' output.json) && (( $(echo "$jq_output > $download_threshold" | bc -l) )) && exit 0 || exit 1
       #     jq_output=$(jq '.upload.bandwidth' output.json) && (( $(echo "$jq_output > $upload_threshold" | bc -l) )) && exit 0 || exit 1
       #     cat output.json
       #     cd ..
       #     rm -rf /root/speedtest/
      #- name: Step 4 - Install Speedtest CLI
      #  run: |
      #    curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash
      #    sudo apt install speedtest
      - name: Step 4 - Install Node 21
        uses: actions/setup-node@v4
        with:
          node-version: 21
      - name: Step 5 - Create Speedtest file
        run: |
          touch speedtest.js
          echo "async function run() {" >> speedtest.js
          echo "    const {default: Speedtest } = await import('@cloudflare/speedtest');" >> speedtest.js
          echo "    new Speedtest().onFinish = results => console.log('{\"download\": ' + results.getDownloadBandwidth() / 1000000 + ', \"upload\": ' + results.getUploadBandwidth() / 1000000 + '}');" >> speedtest.js
          echo "}" >> speedtest.js
          echo "run()" >> speedtest.js
      - name: Step 6 - Install Cloudflare Speedtest CLI
        run: npm i @cloudflare/speedtest
      - name: run speedtest
        env: # Mbps
          download_threshold: 1.25
          upload_threshold: 0.5
        run: |
          node speedtest.js | tee output.json
          jq_output=$(jq '.download' output.json) && (( $(echo "$jq_output > $download_threshold" | bc -l) )) && exit 0 || exit 1
          jq_output=$(jq '.upload' output.json) && (( $(echo "$jq_output > $upload_threshold" | bc -l) )) && exit 0 || exit 1
      - name: Step 7 - Chicago Speedtest
        env: # Mbps
          download_threshold: 20
          upload_threshold: 20
        run: |
          rm -f output.json
          sudo tailscale up --exit-node=chicago-home --accept-routes --advertise-tags=tag:github --hostname=github-fv-az1530-330
          node speedtest.js | tee output.json
          sudo tailscale up --exit-node= --accept-routes --advertise-tags=tag:github --hostname=github-fv-az1530-330
          cat output.json
          jq_output=$(jq '.download' output.json) && (( $(echo "$jq_output > $download_threshold" | bc -l) )) && exit 0 || exit 1
          jq_output=$(jq '.upload' output.json) && (( $(echo "$jq_output > $upload_threshold" | bc -l) )) && exit 0 || exit 1
          rm -f output.json
      - name: Step 8 - Iowa Speedtest
        env: # Mbps
          download_threshold: 900
          upload_threshold: 900
        run: |
          rm -f output.json
          sudo tailscale up --exit-node=iowa-home --accept-routes --advertise-tags=tag:github --hostname=github-fv-az1530-330
          node speedtest.js | tee output.json
          sudo tailscale up --exit-node= --accept-routes --advertise-tags=tag:github --hostname=github-fv-az1530-330
          cat output.json
          jq_output=$(jq '.download' output.json) && (( $(echo "$jq_output > $download_threshold" | bc -l) )) && exit 0 || exit 1
          jq_output=$(jq '.upload' output.json) && (( $(echo "$jq_output > $upload_threshold" | bc -l) )) && exit 0 || exit 1
          rm -f output.json
