---
name: Speedtest

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

jobs:
  speedtest:
    name: Speedtest
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Checkout
        uses: actions/checkout@v4
      - name: Step 2 - Set Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "America/Chicago"

      - name: Step 3 - WireGuard Connection
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard resolvconf
          echo "${{ secrets.IOWA_HOME_VPN_CONF }}" > wg0.conf
          echo "${{ secrets.CHICAGO_HOME_VPN_CONF }}" > wg1.conf
          sudo chmod 600 wg0.conf
          sudo chmod 600 wg1.conf
          sudo cp wg0.conf /etc/wireguard/
          sudo cp wg1.conf /etc/wireguard/
          sudo wg-quick up wg0
          sudo wg-quick up wg1

      - name: Step 4 - Create config file
        run: |
          mkdir resources
          touch resources/config.toml
          echo "[Speedtest]"  >> resources/config.toml
          echo "[Speedtest.Iowa-Home]"  >> resources/config.toml
          echo "url = '${{ secrets.IOWA_HOME_HASSIO_URL }}'"  >> resources/config.toml
          echo "api_key = '${{ secrets.IOWA_HOME_HASSIO_API_KEY }}'"  >> resources/config.toml
          echo "download_limit_megabits = 200.0" >> resources/config.toml
          echo "upload_limit_megabits = 200.0" >> resources/config.toml
          echo "[Speedtest.Chicago-Home]"  >> resources/config.toml
          echo "url = '${{ secrets.CHICAGO_HOME_HASSIO_URL }}'"  >> resources/config.toml
          echo "api_key = '${{ secrets.CHICAGO_HOME_HASSIO_API_KEY }}'"  >> resources/config.toml
          echo "download_limit_megabits = 30.0" >> resources/config.toml
          echo "upload_limit_megabits = 2.0" >> resources/config.toml
      - name: Step 5 - Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Step 6 - Install Poetry and Dependencies
        run: |
          pip3 install -r requirements.txt
          poetry install --no-root --only main
      - name: Step 7 - Run Tests
        run: poetry run pytest tests/test_speedtest.py
