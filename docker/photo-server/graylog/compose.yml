---
name: graylog
services:
  graylog:
    image: graylog/graylog:6.1.3
    container_name: graylog
    depends_on:
      mongo:
        condition: "service_started"
      opensearch:
        condition: "service_started"
    volumes:
      - ${PWD}/config/graylog/graylog.conf:/usr/share/graylog/config/graylog.conf
      - graylog_data:/usr/share/graylog/data
    env_file:
      - .env
    ports:
      - '0.0.0.0:1514:1514'  # Syslog
      - '0.0.0.0:12201:12201'  # GELF
    networks:
      - graynet

    entrypoint: /usr/bin/tini -- wait-for-it opensearch:9200 -- /docker-entrypoint.sh
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.graylog.entrypoints=websecure
      - traefik.http.routers.graylog.rule=Host(`graylog.jstockley.com`)
      - traefik.http.routers.graylog.tls=true
      - traefik.http.routers.graylog.tls.certresolver=production
      - traefik.http.routers.graylog.service=graylog
      - traefik.http.services.graylog.loadbalancer.server.port=9000
      - traefik.docker.network=graylog
  mongo:
    image: mongo:8.0.3
    container_name: mongodb
    volumes:
      - mongo_data:/data/db
    networks:
      - graynet
    restart: unless-stopped

  # The logs themselves are stored in Opensearch
  opensearch:
    image: opensearchproject/opensearch:2.18.0
    container_name: opensearch
    volumes:
      - log_data:/usr/share/opensearch/data
    env_file:
      - .env
    networks:
      - graynet
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.logs.entrypoints=websecure
      - traefik.http.routers.logs.rule=Host(`logs.jstockley.com`)
      - traefik.http.routers.logs.tls=true
      - traefik.http.routers.logs.tls.certresolver=production
      - traefik.http.routers.logs.service=logs
      - traefik.http.services.logs.loadbalancer.server.port=9200
      - traefik.docker.network=graynet
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
networks:
  graynet:
    name: graynet
    external: true

# This is how you persist data between container restarts
volumes:
  mongo_data:
    driver: local
  log_data:
    driver: local
  graylog_data:
    driver: local
