---
name: airflow
services:
  airflow-init:
    image: jnstockley/airflow:2024.12.28
    depends_on:
      - wireguard-airflow
    volumes:
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    environment:
      _AIRFLOW_DB_MIGRATE: 'true'
    env_file: .env
    network_mode: service:wireguard-airflow
    command: version
    healthcheck:
      test: exit 0
      interval: 10s
      timeout: 10s
      retries: 1
      start_period: 0s
    deploy:
      resources:
        limits:
          memory: 256M
    security_opt:
      - no-new-privileges:true

  airflow-scheduler:
    image: jnstockley/airflow:2024.12.28
    container_name: airflow-scheduler
    depends_on:
      - airflow-init
      - wireguard-airflow
    volumes:
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    env_file: .env
    network_mode: service:wireguard-airflow
    command: scheduler
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8974/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 100s
    deploy:
      resources:
        limits:
          memory: 512M
    security_opt:
      - no-new-privileges:true

  airflow-webserver:
    image: jnstockley/airflow:2024.12.28
    container_name: airflow-webserver
    depends_on:
      - airflow-scheduler
      - wireguard-airflow
    volumes:
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    env_file: .env
    network_mode: service:wireguard-airflow
    command: webserver
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8080/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 100s
    labels:
      - traefik.enable=true
      - traefik.http.routers.airflow.entrypoints=websecure
      - traefik.http.routers.airflow.rule=Host(`airflow.local.jstockley.com`)
      - traefik.http.routers.airflow.tls=true
      - traefik.http.routers.airflow.tls.certresolver=production
      - traefik.http.routers.airflow.service=airflow
      - traefik.http.services.airflow.loadbalancer.server.port=8080
      - traefik.docker.network=airflow
    deploy:
      resources:
        limits:
          memory: 512M
    security_opt:
      - no-new-privileges:true

  wireguard-airflow:
    image: linuxserver/wireguard:1.0.20210914@sha256:d0a183ed666bb3ff0ccb55a3fc8de0aeaa7a264251e1bd8c7c8bbdbf4e750764
    container_name: wireguard-airflow
    volumes:
      - ./config:/config/wg_confs
      - /lib/modules:/lib/modules
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    networks:
      - airflow
      - postgres
    restart: unless-stopped
    healthcheck:
      test: curl --fail https://google.com || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 100s
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    deploy:
      resources:
        limits:
          memory: 256M
    security_opt:
      - no-new-privileges:true
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

networks:
  airflow:
    name: airflow
    external: true
  postgres:
    name: postgres
    external: true
