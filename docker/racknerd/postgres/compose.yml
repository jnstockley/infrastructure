---
services:
  postgres:
    image: postgres:17.2
    container_name: postgres
    networks:
      - postgres
      - wireguard
    env_file:
      - .env
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - TZ=America/Chicago
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U jackstockley
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  pg-admin:
    image: dpage/pgadmin4:8.13
    depends_on:
      - postgres
    container_name: pgadmin
    env_file:
      - .env
    networks:
      - postgres
      - pgadmin
      - wireguard
    environment:
      - TZ=America/Chicago
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.jstockley.com`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.tls.certresolver=production
      - traefik.http.routers.pgadmin.service=pgadmin
      - traefik.http.services.pgadmin.loadbalancer.server.port=80
      - traefik.docker.network=pgadmin
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

networks:
  postgres:
    name: postgres
    external: true
  pgadmin:
    external: true
    name: pgadmin
  wireguard:
    name: wireguard
    external: true
