services:
  postgres-db:
    image: postgres:16.2-alpine3.19
    container_name: postgres
    networks:
      - postgres-internal
    env_file:
      - ./.env
    environment:
      - TZ=America/Chicago
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "jackstockley"]
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  pg-admin:
    image: dpage/pgadmin4:8.5
    depends_on:
      - postgres-db
    container_name: pgadmin
    env_file:
      - ./.env
    networks:
      - postgres-internal
      - postgres-external
    environment:
      - TZ=America/Chicago
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.jstockley.com`)"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=production"
      - "traefik.http.routers.pgadmin.service=pgadmin"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.docker.network=postgres-external"
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

networks:
  postgres-internal:
    external: true
    name: postgres-internal
  postgres-external:
    external: true
    name: postgres-external